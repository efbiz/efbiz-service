<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.efbiz.product.product.dao.ProductReviewMapper">
  <resultMap id="BaseResultMap" type="org.efbiz.product.product.model.ProductReview">
    <id column="PRODUCT_REVIEW_ID" jdbcType="VARCHAR" property="productReviewId" />
    <result column="PRODUCT_STORE_ID" jdbcType="VARCHAR" property="productStoreId" />
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    <result column="USER_LOGIN_ID" jdbcType="VARCHAR" property="userLoginId" />
    <result column="STATUS_ID" jdbcType="VARCHAR" property="statusId" />
    <result column="POSTED_ANONYMOUS" jdbcType="CHAR" property="postedAnonymous" />
    <result column="POSTED_DATE_TIME" jdbcType="TIMESTAMP" property="postedDateTime" />
    <result column="PRODUCT_RATING" jdbcType="DECIMAL" property="productRating" />
    <result column="LAST_UPDATED_STAMP" jdbcType="TIMESTAMP" property="lastUpdatedStamp" />
    <result column="LAST_UPDATED_TX_STAMP" jdbcType="TIMESTAMP" property="lastUpdatedTxStamp" />
    <result column="CREATED_STAMP" jdbcType="TIMESTAMP" property="createdStamp" />
    <result column="CREATED_TX_STAMP" jdbcType="TIMESTAMP" property="createdTxStamp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.efbiz.product.product.model.ProductReview">
    <result column="PRODUCT_REVIEW" jdbcType="LONGVARCHAR" property="productReview" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PRODUCT_REVIEW_ID, PRODUCT_STORE_ID, PRODUCT_ID, USER_LOGIN_ID, STATUS_ID, POSTED_ANONYMOUS, 
    POSTED_DATE_TIME, PRODUCT_RATING, LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, CREATED_STAMP, 
    CREATED_TX_STAMP
  </sql>
  <sql id="Blob_Column_List">
    PRODUCT_REVIEW
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.efbiz.product.product.model.ProductReviewExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.efbiz.product.product.model.ProductReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_review
    where PRODUCT_REVIEW_ID = #{productReviewId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product_review
    where PRODUCT_REVIEW_ID = #{productReviewId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.efbiz.product.product.model.ProductReviewExample">
    delete from product_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.efbiz.product.product.model.ProductReview">
    insert into product_review (PRODUCT_REVIEW_ID, PRODUCT_STORE_ID, 
      PRODUCT_ID, USER_LOGIN_ID, STATUS_ID, 
      POSTED_ANONYMOUS, POSTED_DATE_TIME, PRODUCT_RATING, 
      LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, CREATED_STAMP, CREATED_TX_STAMP, PRODUCT_REVIEW)
    values (#{productReviewId,jdbcType=VARCHAR}, #{productStoreId,jdbcType=VARCHAR}, 
      #{productId,jdbcType=VARCHAR}, #{userLoginId,jdbcType=VARCHAR}, #{statusId,jdbcType=VARCHAR}, 
      #{postedAnonymous,jdbcType=CHAR}, #{postedDateTime,jdbcType=TIMESTAMP}, #{productRating,jdbcType=DECIMAL}, 
      NOW(), NOW(), NOW(), NOW(), #{productReview,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.efbiz.product.product.model.ProductReview">
    insert into product_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productReviewId != null">
        PRODUCT_REVIEW_ID,
      </if>
      <if test="productStoreId != null">
        PRODUCT_STORE_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="userLoginId != null">
        USER_LOGIN_ID,
      </if>
      <if test="statusId != null">
        STATUS_ID,
      </if>
      <if test="postedAnonymous != null">
        POSTED_ANONYMOUS,
      </if>
      <if test="postedDateTime != null">
        POSTED_DATE_TIME,
      </if>
      <if test="productRating != null">
        PRODUCT_RATING,
      </if>
      LAST_UPDATED_STAMP,
      LAST_UPDATED_TX_STAMP,
      CREATED_STAMP,
      CREATED_TX_STAMP,
      <if test="productReview != null">
        PRODUCT_REVIEW,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productReviewId != null">
        #{productReviewId,jdbcType=VARCHAR},
      </if>
      <if test="productStoreId != null">
        #{productStoreId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="userLoginId != null">
        #{userLoginId,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="postedAnonymous != null">
        #{postedAnonymous,jdbcType=CHAR},
      </if>
      <if test="postedDateTime != null">
        #{postedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productRating != null">
        #{productRating,jdbcType=DECIMAL},
      </if>
      NOW(),
      NOW(),
      NOW(),
      NOW(),
      <if test="productReview != null">
        #{productReview,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.efbiz.product.product.model.ProductReviewExample" resultType="java.lang.Long">
    select count(*) from product_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_review
    <set>
      <if test="record.productReviewId != null">
        PRODUCT_REVIEW_ID = #{record.productReviewId,jdbcType=VARCHAR},
      </if>
      <if test="record.productStoreId != null">
        PRODUCT_STORE_ID = #{record.productStoreId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoginId != null">
        USER_LOGIN_ID = #{record.userLoginId,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        STATUS_ID = #{record.statusId,jdbcType=VARCHAR},
      </if>
      <if test="record.postedAnonymous != null">
        POSTED_ANONYMOUS = #{record.postedAnonymous,jdbcType=CHAR},
      </if>
      <if test="record.postedDateTime != null">
        POSTED_DATE_TIME = #{record.postedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productRating != null">
        PRODUCT_RATING = #{record.productRating,jdbcType=DECIMAL},
      </if>
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
      <if test="record.productReview != null">
        PRODUCT_REVIEW = #{record.productReview,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_review
    set PRODUCT_REVIEW_ID = #{record.productReviewId,jdbcType=VARCHAR},
      PRODUCT_STORE_ID = #{record.productStoreId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      USER_LOGIN_ID = #{record.userLoginId,jdbcType=VARCHAR},
      STATUS_ID = #{record.statusId,jdbcType=VARCHAR},
      POSTED_ANONYMOUS = #{record.postedAnonymous,jdbcType=CHAR},
      POSTED_DATE_TIME = #{record.postedDateTime,jdbcType=TIMESTAMP},
      PRODUCT_RATING = #{record.productRating,jdbcType=DECIMAL},
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
      PRODUCT_REVIEW = #{record.productReview,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_review
    set PRODUCT_REVIEW_ID = #{record.productReviewId,jdbcType=VARCHAR},
      PRODUCT_STORE_ID = #{record.productStoreId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      USER_LOGIN_ID = #{record.userLoginId,jdbcType=VARCHAR},
      STATUS_ID = #{record.statusId,jdbcType=VARCHAR},
      POSTED_ANONYMOUS = #{record.postedAnonymous,jdbcType=CHAR},
      POSTED_DATE_TIME = #{record.postedDateTime,jdbcType=TIMESTAMP},
      PRODUCT_RATING = #{record.productRating,jdbcType=DECIMAL},
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.efbiz.product.product.model.ProductReview">
    update product_review
    <set>
      <if test="productStoreId != null">
        PRODUCT_STORE_ID = #{productStoreId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="userLoginId != null">
        USER_LOGIN_ID = #{userLoginId,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        STATUS_ID = #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="postedAnonymous != null">
        POSTED_ANONYMOUS = #{postedAnonymous,jdbcType=CHAR},
      </if>
      <if test="postedDateTime != null">
        POSTED_DATE_TIME = #{postedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productRating != null">
        PRODUCT_RATING = #{productRating,jdbcType=DECIMAL},
      </if>
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
      <if test="productReview != null">
        PRODUCT_REVIEW = #{productReview,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PRODUCT_REVIEW_ID = #{productReviewId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.efbiz.product.product.model.ProductReview">
    update product_review
    set PRODUCT_STORE_ID = #{productStoreId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      USER_LOGIN_ID = #{userLoginId,jdbcType=VARCHAR},
      STATUS_ID = #{statusId,jdbcType=VARCHAR},
      POSTED_ANONYMOUS = #{postedAnonymous,jdbcType=CHAR},
      POSTED_DATE_TIME = #{postedDateTime,jdbcType=TIMESTAMP},
      PRODUCT_RATING = #{productRating,jdbcType=DECIMAL},
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
      PRODUCT_REVIEW = #{productReview,jdbcType=LONGVARCHAR}
    where PRODUCT_REVIEW_ID = #{productReviewId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.efbiz.product.product.model.ProductReview">
    update product_review
    set PRODUCT_STORE_ID = #{productStoreId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      USER_LOGIN_ID = #{userLoginId,jdbcType=VARCHAR},
      STATUS_ID = #{statusId,jdbcType=VARCHAR},
      POSTED_ANONYMOUS = #{postedAnonymous,jdbcType=CHAR},
      POSTED_DATE_TIME = #{postedDateTime,jdbcType=TIMESTAMP},
      PRODUCT_RATING = #{productRating,jdbcType=DECIMAL},
      LAST_UPDATED_STAMP =  NOW() ,
      LAST_UPDATED_TX_STAMP =  NOW() ,
    where PRODUCT_REVIEW_ID = #{productReviewId,jdbcType=VARCHAR}
  </update>
</mapper>